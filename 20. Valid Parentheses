/* Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"

Output: true

Example 2:

Input: s = "()[]{}"

Output: true

Example 3:

Input: s = "(]"

Output: false

Example 4:

Input: s = "([])"

Output: true */



Solution 

class Solution {
    func isValid(_ s: String) -> Bool {
       var parathesisDict: [Character: Character] = ["(": ")", "{": "}", "[": "]"]
       var arr = Array(s)
       var stackArr: [Character] = []
       for i in arr {
        if let newVal = parathesisDict[i] {
              stackArr.append(newVal)
        } else if stackArr.last == i  {
            stackArr.popLast()
        } else {
          return false
        }
       }
       return stackArr.isEmpty ? true : false
    }
}
